#!/usr/bin/perl
#
# Upload one or more locally built UBOS packages to a remote UBOS host
# and install those packages there using ubos-admin update
#
# Copyright (C) 2014 and later, Indie Computing Corp. All rights reserved. License: see package.
#

use strict;
use warnings;

use File::Basename;
use Getopt::Long;
use UBOS::Logging;
use UBOS::Utils;

my $host;
my $verbose       = 0;
my $logConfigFile = undef;
my $identityFile  = undef;

my $parseOk = GetOptions(
        'verbose+'    => \$verbose,
        'logConfig=s' => \$logConfigFile,
        'i=s'         => \$identityFile,
        'host=s'      => \$host );

my @packages = @ARGV;
if(    !$parseOk
    || !$host
    || !@packages )
{
    helpQuit();
}
if( $identityFile && ! -e $identityFile ) {
    fatal( 'Cannot find or read file:', $identityFile );
}

UBOS::Logging::initialize( 'ubos-push', undef, $verbose, $logConfigFile );

my $sshCmd   = 'ssh -T shepherd@' . $host;
my $rsyncCmd = 'rsync -e "ssh';
if( $identityFile ) {
    $sshCmd   .= " -i '$identityFile'";
    $rsyncCmd .= " -i '$identityFile'";
}
$rsyncCmd .= '"';

my $wd = '/ubos/tmp';
my $out;

# We are trying to reduce the number of round-trips ...
my $cmd = "( pacman -Qi rsync > /dev/null 2>&1 || sudo pacman -S --noconfirm rsync ) > /dev/null";
$cmd .= " && ( [ -d $wd ] || sudo mkdir -m777 -p $wd )";
$cmd .= " && mktemp --directory $wd/ubos-push-XXX";

if( UBOS::Utils::myexec( $sshCmd, $cmd, \$out )) {
    fatal( 'Cannot prepare destination host', $host );
}
if( $out =~ m!^error! ) {
    fatal( 'An error occurred:', $out );
}
my $dest = $out;
$dest =~ s!\s+$!!;

my @signatures = grep { -e $_ } map { "$_.sig" } @packages;

my $from  = join( ' ', @packages, @signatures );
my $to    = 'shepherd@' . $host . ':' . $dest . '/';
my $quiet = $verbose ? '' : ' -q';

if( UBOS::Utils::myexec( "$rsyncCmd$quiet $from $to" )) {
    fatal( 'Upload failed: rsync', $from, $to );
}
my @barePackages = map { basename( $_ ) } @packages;

$cmd = 'sudo ubos-admin update ';
$cmd .= '-v ' x $verbose;
$cmd .= join( ' ', map { "--pkgfile $dest/$_" } @barePackages );

if( UBOS::Utils::myexec( "$sshCmd $cmd" )) {
    fatal( 'Remote ubos-admin update failed, package files remain in', $dest );
}

$cmd = "/bin/rm -rf $dest";
if( UBOS::Utils::myexec( "$sshCmd $cmd" )) {
    fatal( 'Failed to delete uploaded package files in', $dest );
}

exit 0;

#####

sub helpQuit {
    print STDERR <<END;
Synopsis: $0 [--verbose] [-i <identityFile>] --host <ubos-host> <pkg>...
    <identityFile> -- non-default ssh private key file, like ssh's -i flag
    <ubos-host>    -- the UBOS host on which to install the packages, using
                      the "shepherd" user
    <pkg>          -- filename of one or more packages to be installed
END
    exit 0;
}

1;
